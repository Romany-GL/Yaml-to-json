name: check-status-of-jobs
on: [push]
jobs:
  run-on-status-check:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: sleep the process
        run: sleep 5
        timeout-minutes: 1

      #   - name: cause failure and exit job
      #     run: exit 1

      - name: cause failure but continue to next jobs
        continue-on-error: true
        run: exit 1

      - name: run-on-failure
        if: failure()
        run: echo "this step runs on failure"

      - name: mock-step-to-fail-and-contniue
        id: must-pass
        continue-on-error: true
        run: |
          echo 'this is mock step must pass to run he next step'
          exit 1

      - name: run if must-pass step is failed
        if: failure() && steps.must-pass.conclusion == 'failure'
        run: |
          echo 'conclusion ::>>' ${{steps.must-pass.conclusion}}
          echo 'outcome ::>>' ${{steps.must-pass.outcome}}
          echo 'this step runs if the previouse step failed'

      # This is not needed (DEFAULT BEAHAVIOUR)
      - name: run on success
        if: success()
        run: echo "this step runs on success"

      - name: always run
        if: always()
        run: |
          echo "this step always run"
          echo 'conclusion ::>>' ${{steps.must-pass.conclusion}}
          echo 'outcome ::>>' ${{steps.must-pass.outcome}}

      - name: run on cancel
        if: cancelled()
        run: |
          echo "this steop run on cancelled the WF"
          echo "this steop run if time out exceeded"

  job-2-needs-job-1:
    runs-on: ubuntu-latest
    needs: run-on-status-check
    steps:
      - name: needs-job-1
        run: echo 'Job 2 run when run-on-status-check passed'
